:root {
  --primary-strong-cyan: hsl(172, 67%, 45%);

  --neutral-very-dark-cyan: hsl(183, 100%, 15%);
  --neutral-darker-grayish-cyan: hsl(186, 14%, 43%);
  --neutral-dark-grayish-cyan: hsl(184, 14%, 56%);
  --neutral-light-grayish-cyan: hsl(185, 41%, 84%);
  --neutral-lighter-grayish-cyan: hsl(189, 41%, 97%);
  --neutral-white: hsl(0, 0%, 100%);

  --accent-blue: hsl(172, 61%, 76%);
  --error-orange: hsl(16, 81%, 75%);
  --std-border-radius: 0.15rem;

  font-family: 'Space Mono', monospace;
  font-size: 24px;
  font-weight: 400;
}

/* resets */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: var(--neutral-light-grayish-cyan);
}

main {
  display: flex;
  flex-flow: column;
  align-items: center;
  justify-content: space-evenly;

  min-width: 100vw;
  /* keep some space to fit the attribution */
  min-height: calc(100vh - 20px);

  padding: 1rem;
}

h1 {
  text-transform: uppercase;
  text-align: center;
  font-weight: 400;
  font-size: 1rem;
  color: var(--neutral-darker-grayish-cyan);
}

#container {
  display: flex;
  flex-flow: row wrap;
  background-color: var(--neutral-white);
  border-radius: 1rem;
  width: 100%;

  /* iPad Pro 12.9" width but basically arbitrary */
  max-width: 1024px;
}

#container > div {
  margin: 1rem;
  flex: 1;
}

#controls {
  display: flex;
  flex-flow: column;
  gap: 0.75rem;
}

#controls label,
#controls span {
  margin-bottom: 0.25rem;

  color: var(--neutral-darker-grayish-cyan);
  font-size: 0.6rem;
  font-weight: 400;
  white-space: nowrap;
}

.inputDiv {
  display: flex;
  flex-flow: column;
  position: relative;
}

#controls #lblZero {
  display: none;
  position: absolute;
  right: 0;
  color: var(--error-orange);
}

.inputDiv img {
  position: absolute;
  top: 1.45rem;
  left: 0.3rem;
  width: 10px;
}

input[type='number'] {
  padding: 0.25rem;

  background-color: var(--neutral-lighter-grayish-cyan);
  color: var(--neutral-dark-grayish-cyan);

  text-align: right;

  font-family: inherit;
  font-weight: 700;
  font-size: 0.6rem;

  border: none;
  border-radius: var(--std-border-radius);

  cursor: pointer;
}
button:focus,
button:active,
input[type='number']:focus,
input[type='number']:active {
  outline: none;
  box-shadow: 0 0 0 2px var(--accent-blue);
}

input[type='number'].error {
  box-shadow: 0 0 0 2px var(--error-orange);
}

#buttonGrid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 0.35rem;
}

button {
  width: 100%;
  padding: 0.3rem 0 0.3rem 0;

  color: var(--neutral-white);
  background-color: var(--neutral-very-dark-cyan);

  font-family: inherit;
  font-size: 0.6rem;
  font-weight: 700;

  border: none;
  border-radius: var(--std-border-radius);

  cursor: pointer;
}
#container button:hover,
#container button:active,
button[data-selected] {
  color: var(--neutral-very-dark-cyan);
  background-color: var(--accent-blue);
}

#btnTipCustom {
  background-color: var(--neutral-lighter-grayish-cyan);
  color: var(--neutral-dark-grayish-cyan);
}

#inputCustomTip {
  display: none;
}

/***** results section start *****/
#results {
  display: flex;
  flex-flow: column;
  justify-content: space-between;
  gap: 1rem;
  padding: 1rem;

  border-radius: 0.7rem;
  background-color: var(--neutral-very-dark-cyan);
}
.resultsInfo {
  display: flex;
  flex-flow: row wrap;
  gap: 2rem;
  align-items: center;
  justify-content: space-between;
}

.resultsInfo > span {
  color: var(--neutral-white);
  font-size: 0.5rem;
  white-space: nowrap;
}
.resultsInfo > span > span {
  display: block;
  color: var(--neutral-dark-grayish-cyan);
}

.resultsInfo .resultTotal {
  color: var(--primary-strong-cyan);
  font-weight: 700;
  font-size: 1.2rem;
  text-align: right;
}

#btnReset {
  width: 100%;
  margin-top: 2rem;

  background-color: var(--primary-strong-cyan);
  color: rgb(0 0 0 / 100);

  text-transform: uppercase;
}

.attribution {
  position: relative;
  min-height: 20px;
  font-size: 11px;
}
.attribution a {
  color: hsl(228, 45%, 44%);
}

@media only screen and (max-width: 768px) {
  #container {
    display: flex;
    flex-flow: column;
  }

  #buttonGrid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media only screen and (max-width: 366px) {
  #container {
    display: flex;
    flex-flow: column;
  }

  /* todo: there might be a cleaner way to do this */
  /* labels clash at this size */
  #controls #lblZero {
    position: static;
  }

  /* labels clash at this size */
  #divNumberOfPeople img {
    top: 2.67rem;
  }

  #buttonGrid {
    grid-template-columns: repeat(1, 1fr);
  }
}
